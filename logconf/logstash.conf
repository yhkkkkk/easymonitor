input {
    beats {
        port => 5044
        client_inactivity_timeout => 36000
    }
}
filter {
    if [fields][env] =~ /(?i)test*/ or [fields][env] =~ /(?i)pre*/ {
        mutate {
            add_field => { "index_name" => "test_jkzl_lyxh_backend-alias-%{+YYYY.MM}.01-000001" }
        }
    }
    uuid {
        target    => "uuid"
        overwrite => true
    }
    #ruby {
    #    # code => "event.set('index_name', event.get('[@metadata][index]'))"
    #    code => "event.set('index_name', event.get('@metadata').fetch('_index', 'default_index'))"
    #}
    if [grep_level] =~ /(?i)error/ {
        dissect {
            mapping => {
                "message" => "%{logDate} %{+logDate->} %{logLevel} %{pid} --- [%{thread}] %{logger} : %{message_less} %{errorStack}"
            }
        }
    } else {
        dissect {
            mapping => {
                "message" => "%{logDate} %{+logDate->} %{logLevel} %{pid} --- [%{thread}] %{logger} : %{message}"
            }
        }
    }
    mutate {
        remove_field => [ "grep_level" ]
    }
}

output {
    stdout { codec => rubydebug }
    elasticsearch {
        hosts => ["http://127.0.0.1:10200"]
        user => "xxx"
        password => "xxx"
        # index => "test_jkzl_lyxh_backend-alias-%{+YYYY.MM.dd}"
        template => "/etc/logstash/fields.yml"
        template_name => "test_jkzl_lyxh_backend"
        template_overwrite => true
        # logstash生命周期和filebeat直接导入到es的生命周期不一样    需要提前在es中设置好名为test_monthly_policy的生命周期和索引规则
        ilm_enabled => true
        ilm_rollover_alias => "test_jkzl_lyxh_backend-alias"
        ilm_pattern => "{now/M}-000001"
        ilm_policy => "test_monthly_policy"
    }
    if [logLevel] == "ERROR" {
        http {
            http_method => "post"
            http_compression => "true"
            format => "json"
            content_type => "application/json"
            headers => { "Accept" => "application/json" }
            connect_timeout => 5000
            retry_failed => "true"
            request_timeout => 5000
            pool_max => 50
            url => "http://127.0.0.1:16060/api/alert/log"
        }
    }
}
